# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /

undertow:
  ## IO线程数, 它主要执行非阻塞的任务，它们会负责多个连接，默认设置每个CPU核心一个线程，不可设置过大，否则启动项目会报错：打开文件数过多
  io-threads: 16
  ## 阻塞任务线程池，当执行类似servlet请求阻塞IO操作，undertow会从这个线程池中取得线程。它的值取决于系统线程执行任务的阻塞系数，默认值是 io-threads*8
  worker-threads: 256
  ## 每块buffer的空间大小，越小的空间被利用越充分，不要设置太大，以免影响其他应用
  buffer-size: 1024
  ## 每个区分配的buffer数量
  buffers-per-region: 1024
  ## 是否分配的直接内存(NIO直接分配的堆外内存)
  direct-buffers: true

# Spring配置
spring:
  application:
    name: redis
  redisson:
    master:

    slaves:


  # redis 配置
#  redis:
#    # 地址
#    host: 47.94.134.148
#    # 端口，默认为6379
#    port: 6379
#    # 密码
#    password: myRedis
#    # 连接超时时间
#    timeout: 10s
#    lettuce:
#      pool:
#        # 连接池中的最小空闲连接
#        min-idle: 0
#        # 连接池中的最大空闲连接
#        max-idle: 8
#        # 连接池的最大数据库连接数
#        max-active: 8
#        # #连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-wait: -1ms
