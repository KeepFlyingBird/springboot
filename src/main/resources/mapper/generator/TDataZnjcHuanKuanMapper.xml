<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.freefly.springboot.mybatis.mapper.TDataZnjcHuanKuanMapper">
  <resultMap id="BaseResultMap" type="cn.freefly.springboot.mybatis.entity.TDataZnjcHuanKuan">
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="paylist_code" jdbcType="VARCHAR" property="paylistCode" />
    <result column="beginning_receive_data" jdbcType="VARCHAR" property="beginningReceiveData" />
    <result column="reality_time" jdbcType="VARCHAR" property="realityTime" />
    <result column="beginning_num" jdbcType="INTEGER" property="beginningNum" />
    <result column="yh_benjin" jdbcType="DOUBLE" property="yhBenjin" />
    <result column="yh_lixi" jdbcType="DOUBLE" property="yhLixi" />
    <result column="penalty_paid" jdbcType="DOUBLE" property="penaltyPaid" />
    <result column="ys_benjin" jdbcType="DOUBLE" property="ysBenjin" />
    <result column="ys_lixi" jdbcType="DOUBLE" property="ysLixi" />
    <result column="penalty_rece" jdbcType="DOUBLE" property="penaltyRece" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    project_id, paylist_code, beginning_receive_data, reality_time, beginning_num, yh_benjin, 
    yh_lixi, penalty_paid, ys_benjin, ys_lixi, penalty_rece
  </sql>
  <select id="selectByExample" parameterType="cn.freefly.springboot.mybatis.entity.TDataZnjcHuanKuanCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_data_znjc_huankuan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.freefly.springboot.mybatis.entity.TDataZnjcHuanKuanCriteria">
    delete from t_data_znjc_huankuan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.freefly.springboot.mybatis.entity.TDataZnjcHuanKuan">
    insert into t_data_znjc_huankuan (project_id, paylist_code, beginning_receive_data, 
      reality_time, beginning_num, yh_benjin, 
      yh_lixi, penalty_paid, ys_benjin, 
      ys_lixi, penalty_rece)
    values (#{projectId,jdbcType=INTEGER}, #{paylistCode,jdbcType=VARCHAR}, #{beginningReceiveData,jdbcType=VARCHAR}, 
      #{realityTime,jdbcType=VARCHAR}, #{beginningNum,jdbcType=INTEGER}, #{yhBenjin,jdbcType=DOUBLE}, 
      #{yhLixi,jdbcType=DOUBLE}, #{penaltyPaid,jdbcType=DOUBLE}, #{ysBenjin,jdbcType=DOUBLE}, 
      #{ysLixi,jdbcType=DOUBLE}, #{penaltyRece,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.freefly.springboot.mybatis.entity.TDataZnjcHuanKuan">
    insert into t_data_znjc_huankuan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="paylistCode != null">
        paylist_code,
      </if>
      <if test="beginningReceiveData != null">
        beginning_receive_data,
      </if>
      <if test="realityTime != null">
        reality_time,
      </if>
      <if test="beginningNum != null">
        beginning_num,
      </if>
      <if test="yhBenjin != null">
        yh_benjin,
      </if>
      <if test="yhLixi != null">
        yh_lixi,
      </if>
      <if test="penaltyPaid != null">
        penalty_paid,
      </if>
      <if test="ysBenjin != null">
        ys_benjin,
      </if>
      <if test="ysLixi != null">
        ys_lixi,
      </if>
      <if test="penaltyRece != null">
        penalty_rece,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="paylistCode != null">
        #{paylistCode,jdbcType=VARCHAR},
      </if>
      <if test="beginningReceiveData != null">
        #{beginningReceiveData,jdbcType=VARCHAR},
      </if>
      <if test="realityTime != null">
        #{realityTime,jdbcType=VARCHAR},
      </if>
      <if test="beginningNum != null">
        #{beginningNum,jdbcType=INTEGER},
      </if>
      <if test="yhBenjin != null">
        #{yhBenjin,jdbcType=DOUBLE},
      </if>
      <if test="yhLixi != null">
        #{yhLixi,jdbcType=DOUBLE},
      </if>
      <if test="penaltyPaid != null">
        #{penaltyPaid,jdbcType=DOUBLE},
      </if>
      <if test="ysBenjin != null">
        #{ysBenjin,jdbcType=DOUBLE},
      </if>
      <if test="ysLixi != null">
        #{ysLixi,jdbcType=DOUBLE},
      </if>
      <if test="penaltyRece != null">
        #{penaltyRece,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.freefly.springboot.mybatis.entity.TDataZnjcHuanKuanCriteria" resultType="java.lang.Long">
    select count(*) from t_data_znjc_huankuan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_data_znjc_huankuan
    <set>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.paylistCode != null">
        paylist_code = #{record.paylistCode,jdbcType=VARCHAR},
      </if>
      <if test="record.beginningReceiveData != null">
        beginning_receive_data = #{record.beginningReceiveData,jdbcType=VARCHAR},
      </if>
      <if test="record.realityTime != null">
        reality_time = #{record.realityTime,jdbcType=VARCHAR},
      </if>
      <if test="record.beginningNum != null">
        beginning_num = #{record.beginningNum,jdbcType=INTEGER},
      </if>
      <if test="record.yhBenjin != null">
        yh_benjin = #{record.yhBenjin,jdbcType=DOUBLE},
      </if>
      <if test="record.yhLixi != null">
        yh_lixi = #{record.yhLixi,jdbcType=DOUBLE},
      </if>
      <if test="record.penaltyPaid != null">
        penalty_paid = #{record.penaltyPaid,jdbcType=DOUBLE},
      </if>
      <if test="record.ysBenjin != null">
        ys_benjin = #{record.ysBenjin,jdbcType=DOUBLE},
      </if>
      <if test="record.ysLixi != null">
        ys_lixi = #{record.ysLixi,jdbcType=DOUBLE},
      </if>
      <if test="record.penaltyRece != null">
        penalty_rece = #{record.penaltyRece,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_data_znjc_huankuan
    set project_id = #{record.projectId,jdbcType=INTEGER},
      paylist_code = #{record.paylistCode,jdbcType=VARCHAR},
      beginning_receive_data = #{record.beginningReceiveData,jdbcType=VARCHAR},
      reality_time = #{record.realityTime,jdbcType=VARCHAR},
      beginning_num = #{record.beginningNum,jdbcType=INTEGER},
      yh_benjin = #{record.yhBenjin,jdbcType=DOUBLE},
      yh_lixi = #{record.yhLixi,jdbcType=DOUBLE},
      penalty_paid = #{record.penaltyPaid,jdbcType=DOUBLE},
      ys_benjin = #{record.ysBenjin,jdbcType=DOUBLE},
      ys_lixi = #{record.ysLixi,jdbcType=DOUBLE},
      penalty_rece = #{record.penaltyRece,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.freefly.springboot.mybatis.entity.TDataZnjcHuanKuanCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_data_znjc_huankuan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insertTDataHuanKuanBatch" parameterType="java.util.List" >
      insert into t_data_znjc_huankuan
      (project_id, paylist_code, beginning_receive_data,
          reality_time, beginning_num, yh_benjin,
          yh_lixi, penalty_paid, ys_benjin,
          ys_lixi, penalty_rece
      )values
      <foreach collection="list" item="item" index="index" separator=",">
        (
          #{item.projectId}, #{item.paylistCode}, #{item.beginningReceiveData},
          #{item.realityTime}, #{item.beginningNum}, #{item.yhBenjin},
          #{item.yhLixi}, #{item.penaltyPaid}, #{item.ysBenjin},
          #{item.ysLixi}, #{item.penaltyRece}
        )
      </foreach>
  </insert>
  <insert id="insertObjStrListBatch" parameterType="java.util.List">
    insert into t_data_znjc_huankuan
    (
      project_id, paylist_code, beginning_receive_data,
      reality_time, beginning_num, yh_benjin,
      yh_lixi, penalty_paid, ys_benjin,
      ys_lixi, penalty_rece
    )values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item[0]}, #{item[1]}, #{item[2]},
      #{item[3]}, #{item[4]}, #{item[5]},
      #{item[6]}, #{item[7]}, #{item[8]},
      #{item[9]}, #{item[10]}
      )
    </foreach>
  </insert>
  <insert id="insertObjListBatch" parameterType="java.util.List">
    insert into t_data_znjc_huankuan
    (
    project_id, paylist_code, beginning_receive_data,
    reality_time, beginning_num, yh_benjin,
    yh_lixi, penalty_paid, ys_benjin,
    ys_lixi, penalty_rece
    )values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.projectId}, #{item.paylistCode}, #{item.beginningReceiveData},
      #{item.realityTime}, #{item.beginningNum}, #{item.yhBenjin},
      #{item.yhLixi}, #{item.penaltyPaid}, #{item.ysBenjin},
      #{item.ysLixi}, #{item.penaltyRece}
      )
    </foreach>
  </insert>
  <!--<insert id="insertTDataHuanKuanBatchOrcl" parameterType="java.util.List" >-->
    <!--<foreach collection="list" item="item" close="end;" open="begin ">-->
      <!--INSERT INTO T_DATA_ZNJC_HUANKUAN_1 (-->
        <!--project_id, paylist_code, beginning_receive_data,-->
        <!--reality_time, beginning_num, yh_benjin,-->
        <!--yh_lixi, penalty_paid, ys_benjin,-->
        <!--ys_lixi, penalty_rece-->
      <!--)values (-->
          <!--#{item.projectId}, #{item.paylistCode}, #{item.beginningReceiveData},-->
          <!--#{item.realityTime}, #{item.beginningNum}, #{item.yhBenjin},-->
          <!--#{item.yhLixi}, #{item.penaltyPaid}, #{item.ysBenjin},-->
          <!--#{item.ysLixi}, #{item.penaltyRece}-->
      <!--)-->
    <!--</foreach>-->
  <!--</insert>-->
</mapper>